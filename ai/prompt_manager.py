"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏ –∏ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
"""

import logging
from typing import Dict, List, Optional, Tuple, Any
from dataclasses import dataclass
from enum import Enum
from datetime import datetime
import random

logger = logging.getLogger(__name__)

class PromptType(Enum):
    """–¢–∏–ø—ã –ø—Ä–æ–º–ø—Ç–æ–≤"""
    EXPRESS_ANALYSIS = "express_analysis"
    FULL_ANALYSIS = "full_analysis"
    PSYCHOLOGY_CONSULTATION = "psychology_consultation"
    CAREER_CONSULTATION = "career_consultation"
    EMOTIONAL_SUPPORT = "emotional_support"
    SELF_ESTEEM_ANALYSIS = "self_esteem_analysis"

class PromptLength(Enum):
    """–î–ª–∏–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤"""
    SHORT = "short"      # ~200 —Ç–æ–∫–µ–Ω–æ–≤
    MEDIUM = "medium"    # ~400 —Ç–æ–∫–µ–Ω–æ–≤
    LONG = "long"        # ~600 —Ç–æ–∫–µ–Ω–æ–≤
    EXTENDED = "extended" # ~800 —Ç–æ–∫–µ–Ω–æ–≤

@dataclass
class PromptTemplate:
    """–®–∞–±–ª–æ–Ω –ø—Ä–æ–º–ø—Ç–∞ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏"""
    id: str
    type: PromptType
    length: PromptLength
    template: str
    description: str
    estimated_tokens: int
    active: bool = True
    created_at: Optional[datetime] = None
    usage_count: int = 0
    success_rate: float = 0.0
    
    def __post_init__(self):
        if self.created_at is None:
            self.created_at = datetime.now()

@dataclass
class PromptMetrics:
    """–ú–µ—Ç—Ä–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞"""
    template_id: str
    total_uses: int = 0
    successful_uses: int = 0
    avg_response_length: float = 0.0
    avg_user_satisfaction: float = 0.0
    conversion_rate: float = 0.0
    last_used: Optional[datetime] = None

class PromptManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–º–ø—Ç–æ–≤ —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏ –∏ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    def __init__(self, config):
        self.config = config
        self.templates: Dict[str, PromptTemplate] = {}
        self.metrics: Dict[str, PromptMetrics] = {}
        self.user_preferences: Dict[int, Dict[str, Any]] = {}
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
        self._load_default_templates()
    
    def _load_default_templates(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤"""
        
        # –≠–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑ - –∫–æ—Ä–æ—Ç–∫–∏–π
        self.templates["express_analysis_short"] = PromptTemplate(
            id="express_analysis_short",
            type=PromptType.EXPRESS_ANALYSIS,
            length=PromptLength.SHORT,
            template="""–¢—ã ‚Äî HR-–ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫. –ü—Ä–æ–≤–µ–¥–∏ –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏.

–î–ò–ê–õ–û–ì: {conversation}

–§–û–†–ú–ê–¢:
üß† –ü—Å–∏—Ö–æ—Ç–∏–ø: [–∫—Ä–∞—Ç–∫–æ]
üíº –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Å—Ñ–µ—Ä—ã: [2-3 –æ–±–ª–∞—Å—Ç–∏]
üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ]

–°–¢–ò–õ–¨: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –¥–æ 150 —Å–ª–æ–≤.""",
            description="–ö—Ä–∞—Ç–∫–∏–π —ç–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑",
            estimated_tokens=200
        )
        
        # –≠–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑ - —Å—Ä–µ–¥–Ω–∏–π
        self.templates["express_analysis_medium"] = PromptTemplate(
            id="express_analysis_medium",
            type=PromptType.EXPRESS_ANALYSIS,
            length=PromptLength.MEDIUM,
            template="""–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π HR-–ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫ –∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç.

–î–ò–ê–õ–û–ì –ö–õ–ò–ï–ù–¢–ê ({message_count} —Å–æ–æ–±—â–µ–Ω–∏–π):
{conversation}

–ó–ê–î–ê–ß–ê: –ü—Ä–æ–≤–µ–¥–∏ —ç–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏.

–ú–ï–¢–û–î–û–õ–û–ì–ò–Ø:
- –ü—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑ (–§—Ä–µ–π–¥): –∑–∞—â–∏—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã
- –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è (–Æ–Ω–≥): –∞—Ä—Ö–µ—Ç–∏–ø—ã
- MBTI: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π
- Big Five: –æ—Å–Ω–æ–≤–Ω—ã–µ —á–µ—Ä—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üéØ –≠–ö–°–ü–†–ï–°–°-–ü–†–û–§–ò–õ–¨

üß† –ü—Å–∏—Ö–æ—Ç–∏–ø: [–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ]
üìä –û—Å–Ω–æ–≤–Ω—ã–µ —á–µ—Ä—Ç—ã: [2-3 —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏]
üíº –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Å—Ñ–µ—Ä—ã: [3-4 –æ–±–ª–∞—Å—Ç–∏]
üéì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è]
‚ö†Ô∏è –ó–æ–Ω—ã —Ä–∞–∑–≤–∏—Ç–∏—è: [—á—Ç–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å]

–°–¢–ò–õ–¨: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π. –î–æ 300 —Å–ª–æ–≤.""",
            description="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑",
            estimated_tokens=400
        )
        
        # –≠–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑ - –¥–ª–∏–Ω–Ω—ã–π
        self.templates["express_analysis_long"] = PromptTemplate(
            id="express_analysis_long",
            type=PromptType.EXPRESS_ANALYSIS,
            length=PromptLength.LONG,
            template="""–¢—ã ‚Äî –≤–µ–¥—É—â–∏–π HR-–ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫ —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º.

–î–ï–¢–ê–õ–¨–ù–´–ô –î–ò–ê–õ–û–ì –ö–õ–ò–ï–ù–¢–ê ({message_count} —Å–æ–æ–±—â–µ–Ω–∏–π):
{conversation}

–ö–û–ù–¢–ï–ö–°–¢: {conversation}

–ó–ê–î–ê–ß–ê: –ü—Ä–æ–≤–µ–¥–∏ –≥–ª—É–±–æ–∫–∏–π —ç–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏.

–ú–ï–¢–û–î–û–õ–û–ì–ò–Ø:
- –ü—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑ (–§—Ä–µ–π–¥): –∑–∞—â–∏—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã, –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–µ –º–æ—Ç–∏–≤—ã
- –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è (–Æ–Ω–≥): –∞—Ä—Ö–µ—Ç–∏–ø—ã, —Ç–∏–ø—ã –ª–∏—á–Ω–æ—Å—Ç–∏
- MBTI: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–∏ –∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π
- Big Five: –æ—Å–Ω–æ–≤–Ω—ã–µ —á–µ—Ä—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏
- –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–µ–≤—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üéØ –î–ï–¢–ê–õ–¨–ù–´–ô –≠–ö–°–ü–†–ï–°–°-–ü–†–û–§–ò–õ–¨

üß† –ü—Å–∏—Ö–æ—Ç–∏–ø: [–ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Æ–Ω–≥–∞/–§—Ä–µ–π–¥–∞]
üìä –û—Å–Ω–æ–≤–Ω—ã–µ —á–µ—Ä—Ç—ã: [3-4 –∫–ª—é—á–µ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏]
üíº –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Å—Ñ–µ—Ä—ã: [4-5 –æ–±–ª–∞—Å—Ç–µ–π —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º]
üéì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—É—á–µ–Ω–∏—é: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ñ–æ—Ä–º–∞—Ç—ã]
‚ö†Ô∏è –ó–æ–Ω—ã —Ä–∞–∑–≤–∏—Ç–∏—è: [—á—Ç–æ —Å—Ç–æ–∏—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∏ –∫–∞–∫]
üí° –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã: [–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞]

–°–¢–ò–õ–¨: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π. –î–æ 500 —Å–ª–æ–≤.""",
            description="–î–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑",
            estimated_tokens=600
        )
        
        # –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - –∫–æ—Ä–æ—Ç–∫–∞—è
        self.templates["psychology_consultation_short"] = PromptTemplate(
            id="psychology_consultation_short",
            type=PromptType.PSYCHOLOGY_CONSULTATION,
            length=PromptLength.SHORT,
            template="""–¢—ã ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –ü–æ–¥–¥–µ—Ä–∂–∏ –∏ –ø–æ–π–º–∏ –∫–ª–∏–µ–Ω—Ç–∞.

–°–û–û–ë–©–ï–ù–ò–ï: {conversation}

–û–¢–í–ï–¢:
üíô –ü–æ–Ω–∏–º–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤
ü§ó –ü–æ–¥–¥–µ—Ä–∂–∫–∞
üí° –ú—è–≥–∫–∏–π —Å–æ–≤–µ—Ç

–°–¢–ò–õ–¨: –¢–µ–ø–ª—ã–π, –¥–æ 100 —Å–ª–æ–≤.""",
            description="–ö—Ä–∞—Ç–∫–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
            estimated_tokens=150
        )
        
        # –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - —Å—Ä–µ–¥–Ω—è—è
        self.templates["psychology_consultation_medium"] = PromptTemplate(
            id="psychology_consultation_medium",
            type=PromptType.PSYCHOLOGY_CONSULTATION,
            length=PromptLength.MEDIUM,
            template="""–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥ —Å –±–æ–ª—å—à–∏–º —Å–µ—Ä–¥—Ü–µ–º.

–ò–°–¢–û–†–ò–Ø –†–ê–ó–ì–û–í–û–†–ê:
{conversation}

–¢–ï–ö–£–©–ï–ï –°–û–û–ë–©–ï–ù–ò–ï:
{conversation}

–¢–í–û–Ø –†–û–õ–¨: –î—Ä—É–≥-–ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–Ω–∏—Ç –≤–µ—Å—å —Ä–∞–∑–≥–æ–≤–æ—Ä.

–ü–†–ò–ù–¶–ò–ü–´:
- –°–ù–ê–ß–ê–õ–ê –ø—Ä–æ—è–≤–∏ —ç–º–ø–∞—Ç–∏—é –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ
- –£–ß–ò–¢–´–í–ê–ô –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
- –ù–ï –¥–∞–≤–∞–π —Å–æ–≤–µ—Ç—ã, –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ—Å—è—Ç
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üíô –≠–º–ø–∞—Ç–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç (—Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
ü§ó –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ
üí° –ú—è–≥–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (–µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ)

–°–¢–ò–õ–¨: –¢–µ–ø–ª—ã–π, –ø–æ–Ω–∏–º–∞—é—â–∏–π. –î–æ 250 —Å–ª–æ–≤.""",
            description="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
            estimated_tokens=300
        )
        
        # –ö–∞—Ä—å–µ—Ä–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - —Å—Ä–µ–¥–Ω—è—è
        self.templates["career_consultation_medium"] = PromptTemplate(
            id="career_consultation_medium",
            type=PromptType.CAREER_CONSULTATION,
            length=PromptLength.MEDIUM,
            template="""–¢—ã ‚Äî HR-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º.

–°–û–û–ë–©–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–ê:
{conversation}

–ö–û–ù–¢–ï–ö–°–¢: {conversation}

–¢–í–û–Ø –†–û–õ–¨: –≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∞—Ä—å–µ—Ä–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏—é.

–í–ê–ñ–ù–û: –û—Ç–≤–µ—á–∞–π –ü–û–õ–ù–û–°–¢–¨–Æ –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –æ–±—Ä—ã–≤–∞–π –æ—Ç–≤–µ—Ç.

–§–û–ö–£–°:
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∏
- –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
- –ö–∞—Ä—å–µ—Ä–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
- –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üíº –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
üéØ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏
üìà –ö–∞—Ä—å–µ—Ä–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
üéì –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

–°–¢–ò–õ–¨: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π, –ü–û–õ–ù–´–ô –æ—Ç–≤–µ—Ç. –î–æ 400 —Å–ª–æ–≤.""",
            description="–ö–∞—Ä—å–µ—Ä–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
            estimated_tokens=400
        )
        
        # –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        self.templates["full_analysis"] = PromptTemplate(
            id="full_analysis",
            type=PromptType.FULL_ANALYSIS,
            length=PromptLength.EXTENDED,
            template="""–¢—ã ‚Äî –≤–µ–¥—É—â–∏–π –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫ –∏ HR-—ç–∫—Å–ø–µ—Ä—Ç —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º.

–î–ï–¢–ê–õ–¨–ù–´–ï –û–¢–í–ï–¢–´ –ö–õ–ò–ï–ù–¢–ê:
{conversation}

–ü–†–û–í–ï–î–ò –ì–õ–£–ë–û–ö–ò–ô –ü–°–ò–•–û–ê–ù–ê–õ–ò–ó:

üß† –ü–°–ò–•–û–ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–†–û–§–ò–õ–¨:
- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ (–ò–¥/–≠–≥–æ/–°—É–ø–µ—Ä—ç–≥–æ)
- –ó–∞—â–∏—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã
- –ë–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
- –¢—Ä–∞–≤–º—ã –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ

üé≠ –ê–†–•–ï–¢–ò–ü–´ –ò –¢–ò–ü–û–õ–û–ì–ò–Ø:
- –î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –∞—Ä—Ö–µ—Ç–∏–ø –ø–æ –Æ–Ω–≥—É
- MBTI —Ç–∏–ø —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º
- –¢–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

üìä BIG FIVE (OCEAN):
- –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å: [1-10] + –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ
- –î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å: [1-10] + –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ  
- –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è: [1-10] + –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ
- –î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: [1-10] + –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ
- –ù–µ–π—Ä–æ—Ç–∏–∑–º: [1-10] + –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ

üíº HR-–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
- –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–æ–ª–∏ –∏ –ø–æ–∑–∏—Ü–∏–∏
- –°—Ç–∏–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è/—Ä–∞–±–æ—Ç—ã
- –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
- –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏

üéì –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è
- –§–æ—Ä–º–∞—Ç—ã –æ–±—É—á–µ–Ω–∏—è (–æ—á–Ω–æ–µ/–∑–∞–æ—á–Ω–æ–µ)
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏
- –ö–∞—Ä—å–µ—Ä–Ω–∞—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—è

üîÆ –ü–†–û–ì–ù–û–ó –†–ê–ó–í–ò–¢–ò–Ø:
- –ö–∞–∫ –±—É–¥–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –ª–∏—á–Ω–æ—Å—Ç—å
- –ö–ª—é—á–µ–≤—ã–µ —Ç–æ—á–∫–∏ —Ä–æ—Å—Ç–∞
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é

–°–¢–ò–õ–¨: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –¥–µ—Ç–∞–ª—å–Ω—ã–π, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π. 1200-1500 —Å–ª–æ–≤.""",
            description="–ü–æ–ª–Ω—ã–π –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑",
            estimated_tokens=800
        )
        

        # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n        self.templates["emotional_support_short"] = PromptTemplate(\n            id="emotional_support_short",\n            type=PromptType.EMOTIONAL_SUPPORT,\n            length=PromptLength.SHORT,\n            template="""–¢—ã ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –ü–æ–¥–¥–µ—Ä–∂–∏ –∏ —É—Å–ø–æ–∫–æ–π –∫–ª–∏–µ–Ω—Ç–∞.\n\n–°–û–û–ë–©–ï–ù–ò–ï: {conversation}\n\n–û–¢–í–ï–¢:\nüíô –ü–æ–Ω–∏–º–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤\nü§ó –ü–æ–¥–¥–µ—Ä–∂–∫–∞\nüí° –ú—è–≥–∫–∏–π —Å–æ–≤–µ—Ç\n\n–°–¢–ò–õ–¨: –¢–µ–ø–ª—ã–π, –¥–æ 100 —Å–ª–æ–≤.""",\n            description="–ö—Ä–∞—Ç–∫–∞—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",\n            estimated_tokens=150\n        )\n\n        # –ê–Ω–∞–ª–∏–∑ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏\n        self.templates["self_esteem_analysis"] = PromptTemplate(\n            id="self_esteem_analysis",\n            type=PromptType.SELF_ESTEEM_ANALYSIS,\n            length=PromptLength.LONG,\n            template="""–¢—ã ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥-—ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–µ. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏.\n\n–û–¢–í–ï–¢–´ –ù–ê –¢–ï–°–¢:\n{conversation}\n\n–ü–†–û–í–ï–î–ò –ê–ù–ê–õ–ò–ó –°–ê–ú–û–û–¶–ï–ù–ö–ò:\n\nüéØ –£–†–û–í–ï–ù–¨ –°–ê–ú–û–û–¶–ï–ù–ö–ò:\n- –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ (–Ω–∏–∑–∫–∞—è/—Å—Ä–µ–¥–Ω—è—è/–≤—ã—Å–æ–∫–∞—è)\n- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏\n- –°–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã\n\nüìä –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó:\n- –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ\n- –°–∞–º–æ–ø—Ä–∏–Ω—è—Ç–∏–µ\n- –°–∞–º–æ—É–≤–∞–∂–µ–Ω–∏–µ\n- –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å\n\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏\n- –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏\n- –†–∞–±–æ—Ç–∞ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∫—Ä–∏—Ç–∏–∫–æ–º\n\n–°–¢–ò–õ–¨: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π, –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π. 800-1200 —Å–ª–æ–≤.""",\n            description="–ê–Ω–∞–ª–∏–∑ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏",\n            estimated_tokens=600\n        )\n
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤
        for template_id in self.templates:
            self.metrics[template_id] = PromptMetrics(template_id=template_id)
    
    def get_optimal_prompt(
        self, 
        prompt_type: PromptType, 
        available_tokens: int,
        user_id: Optional[int] = None,
        context: Optional[Dict[str, Any]] = None
    ) -> Tuple[str, str]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –∏ –º–µ—Ç—Ä–∏–∫"""
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_prefs = self.user_preferences.get(user_id, {})
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —à–∞–±–ª–æ–Ω—ã –ø–æ —Ç–∏–ø—É
        type_templates = {
            k: v for k, v in self.templates.items() 
            if v.type == prompt_type and v.active
        }
        
        if not type_templates:
            logger.error(f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —Ç–∏–ø–∞ {prompt_type}")
            return "", "default"
        
        # –í—ã–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É
        optimal_length = self._select_optimal_length(available_tokens, user_prefs)
        
        # –ò—â–µ–º —à–∞–±–ª–æ–Ω –ø–æ–¥—Ö–æ–¥—è—â–µ–π –¥–ª–∏–Ω—ã
        suitable_templates = [
            t for t in type_templates.values() 
            if t.length == optimal_length and t.estimated_tokens <= available_tokens
        ]
        
        if not suitable_templates:
            # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö, –±–µ—Ä–µ–º —Å–∞–º—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π
            suitable_templates = [
                t for t in type_templates.values() 
                if t.estimated_tokens <= available_tokens
            ]
            suitable_templates.sort(key=lambda x: x.estimated_tokens)
        
        if not suitable_templates:
            # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –±–µ—Ä–µ–º —Å–∞–º—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π
            suitable_templates = [min(type_templates.values(), key=lambda x: x.estimated_tokens)]
        
        # –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π —à–∞–±–ª–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç—Ä–∏–∫
        selected_template = self._select_best_template(suitable_templates)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
        formatted_prompt = self._format_prompt(selected_template, context or {})
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
        self._update_template_metrics(selected_template.id)
        
        return formatted_prompt, selected_template.id
    
    def _select_optimal_length(self, available_tokens: int, user_prefs: Dict[str, Any]) -> PromptLength:
        """–í—ã–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –ø—Ä–æ–º–ø—Ç–∞"""
        
        # –£—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        preferred_length = user_prefs.get('preferred_length')
        if preferred_length:
            try:
                return PromptLength(preferred_length)
            except ValueError:
                pass
        
        # –í—ã–±–∏—Ä–∞–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
        if available_tokens >= 600:
            return PromptLength.LONG
        elif available_tokens >= 400:
            return PromptLength.MEDIUM
        else:
            return PromptLength.SHORT
    
    def _select_best_template(self, templates: List[PromptTemplate]) -> PromptTemplate:
        """–í—ã–±–æ—Ä –ª—É—á—à–µ–≥–æ —à–∞–±–ª–æ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç—Ä–∏–∫"""
        if len(templates) == 1:
            return templates[0]
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∏ —á–∞—Å—Ç–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        def score_template(template: PromptTemplate) -> float:
            metrics = self.metrics.get(template.id, PromptMetrics(template_id=template.id))
            
            # –°–æ—Å—Ç–∞–≤–Ω–æ–π —Å–∫–æ—Ä: —É—Å–ø–µ—à–Ω–æ—Å—Ç—å (60%) + —á–∞—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (40%)
            success_score = metrics.successful_uses / max(metrics.total_uses, 1)
            usage_score = min(metrics.total_uses / 100, 1.0)  # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–æ 1.0
            
            return success_score * 0.6 + usage_score * 0.4
        
        return max(templates, key=score_template)
    
    def _format_prompt(self, template: PromptTemplate, context: Dict[str, Any]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º"""
        try:
            return template.template.format(**context)
        except KeyError as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ {template.id}: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            return template.template
    
    def _update_template_metrics(self, template_id: str):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞"""
        if template_id in self.metrics:
            self.metrics[template_id].total_uses += 1
            self.metrics[template_id].last_used = datetime.now()
    
    def record_success(self, template_id: str, response_length: int, user_satisfaction: float = None):
        """–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞"""
        if template_id in self.metrics:
            metrics = self.metrics[template_id]
            metrics.successful_uses += 1
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–µ–¥–Ω—é—é –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞
            if metrics.avg_response_length == 0:
                metrics.avg_response_length = response_length
            else:
                metrics.avg_response_length = (
                    (metrics.avg_response_length * (metrics.successful_uses - 1) + response_length) 
                    / metrics.successful_uses
                )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–µ–¥–Ω—é—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å
            if user_satisfaction is not None:
                if metrics.avg_user_satisfaction == 0:
                    metrics.avg_user_satisfaction = user_satisfaction
                else:
                    metrics.avg_user_satisfaction = (
                        (metrics.avg_user_satisfaction * (metrics.successful_uses - 1) + user_satisfaction) 
                        / metrics.successful_uses
                    )
    
    def update_user_preferences(self, user_id: int, preferences: Dict[str, Any]):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id not in self.user_preferences:
            self.user_preferences[user_id] = {}
        
        self.user_preferences[user_id].update(preferences)
        logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {preferences}")
    
    def get_user_preferences(self, user_id: int) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        return self.user_preferences.get(user_id, {})
    
    def get_template_stats(self) -> Dict[str, Dict[str, Any]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —à–∞–±–ª–æ–Ω–∞–º"""
        stats = {}
        
        for template_id, template in self.templates.items():
            metrics = self.metrics.get(template_id, PromptMetrics(template_id=template_id))
            
            stats[template_id] = {
                'type': template.type.value,
                'length': template.length.value,
                'estimated_tokens': template.estimated_tokens,
                'active': template.active,
                'description': template.description,
                'total_uses': metrics.total_uses,
                'successful_uses': metrics.successful_uses,
                'success_rate': metrics.successful_uses / max(metrics.total_uses, 1),
                'avg_response_length': metrics.avg_response_length,
                'avg_user_satisfaction': metrics.avg_user_satisfaction,
                'last_used': metrics.last_used.isoformat() if metrics.last_used else None
            }
        
        return stats
    
    def get_best_templates(self, prompt_type: PromptType, limit: int = 5) -> List[PromptTemplate]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ª—É—á—à–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ —Ç–∏–ø—É"""
        type_templates = [
            t for t in self.templates.values() 
            if t.type == prompt_type and t.active
        ]
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º
        def template_score(template: PromptTemplate) -> float:
            metrics = self.metrics.get(template.id, PromptMetrics(template_id=template.id))
            success_rate = metrics.successful_uses / max(metrics.total_uses, 1)
            return success_rate * 0.7 + (metrics.avg_user_satisfaction / 5.0) * 0.3
        
        sorted_templates = sorted(type_templates, key=template_score, reverse=True)
        return sorted_templates[:limit]