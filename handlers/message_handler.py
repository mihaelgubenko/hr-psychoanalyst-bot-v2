"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
"""

import logging
from typing import Dict, Any, Optional
from telegram import Update
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

logger = logging.getLogger(__name__)

class MessageHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    def __init__(self, ai_client, database):
        self.ai_client = ai_client
        self.database = database
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.ai_client.clear_user_data(user.id)
        
        welcome_text = (
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name or '–¥—Ä—É–≥'}! üëã\n\n"
            f"–Ø –≤–∞—à *HR-–ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏—Ç–∏–∫* –∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç.\n\n"
            f"*–ß—Ç–æ —è —É–º–µ—é:*\n"
            f"üß† –ê–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–±–æ—Ä –∫–∞—Ä—å–µ—Ä—ã\n"
            f"üíô –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
            f"üìñ –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏ (30 –≤–æ–ø—Ä–æ—Å–æ–≤)\n"
            f"üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ\n\n"
            f"*–ö–æ–º–∞–Ω–¥—ã:*\n"
            f"/self\\_esteem - –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏\n"
            f"/help - –°–ø—Ä–∞–≤–∫–∞\n"
            f"/consultation - –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n\n"
            f"–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ —Ç–æ–º, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!"
        )
        
        await update.message.reply_text(welcome_text, parse_mode=ParseMode.MARKDOWN)
        return 'WAITING_MESSAGE'
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = (
            "*–°–ü–†–ê–í–ö–ê*\n\n"
            "*–ë–µ—Å–ø–ª–∞—Ç–Ω–æ:*\n"
            "‚Ä¢ –î–∏–∞–ª–æ–≥ –∏ —ç–∫—Å–ø—Ä–µ—Å—Å-–∞–Ω–∞–ª–∏–∑\n"
            "‚Ä¢ –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏ (30 –≤–æ–ø—Ä–æ—Å–æ–≤)\n"
            "‚Ä¢ –ü–æ–¥–±–æ—Ä –∫–∞—Ä—å–µ—Ä—ã\n\n"
            "*–ü–ª–∞—Ç–Ω–æ (500‚ÇΩ):*\n"
            "‚Ä¢ –ü–æ–ª–Ω—ã–π –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑\n"
            "‚Ä¢ –õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n\n"
            "*–ö–æ–º–∞–Ω–¥—ã:*\n"
            "/start \\- –º–µ–Ω—é\n"
            "/self\\_esteem \\- —Ç–µ—Å—Ç\n"
            "/consultation \\- –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n"
            "/cancel \\- –æ—Ç–º–µ–Ω–∏—Ç—å\n\n"
            "–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –æ —Ç–æ–º, —á—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç!"
        )
        await update.message.reply_text(help_text, parse_mode=ParseMode.MARKDOWN)
    
    async def cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel"""
        user = update.effective_user
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.ai_client.clear_user_data(user.id)
        
        await update.message.reply_text(
            "–ê–Ω–∞–ª–∏–∑ –æ—Ç–º–µ–Ω–µ–Ω. –î–ª—è –Ω–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start"
        )
        return 'END'
    
    async def reset_bot(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset"""
        user = update.effective_user
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.ai_client.clear_user_data(user.id)
        
        await update.message.reply_text(
            "üîÑ –ë–æ—Ç —Å–±—Ä–æ—à–µ–Ω!\n\n"
            "–í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start"
        )
    
    async def clear_memory(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        user = update.effective_user
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
        if user.id != 123456789:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            return
        
        # –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
        self.ai_client.response_cache.clear()
        
        # –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        try:
            await self.database.clear_all_data()
            
            await update.message.reply_text(
                "‚úÖ –ü–∞–º—è—Ç—å –±–æ—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞:\n"
                "‚Ä¢ –û—á–∏—â–µ–Ω–∞ RAM –ø–∞–º—è—Ç—å\n"
                "‚Ä¢ –û—á–∏—â–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö\n"
                "‚Ä¢ –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ —É–¥–∞–ª–µ–Ω—ã\n\n"
                "üí° –î–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ Telegram –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start"
            )
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
    
    async def consultation_info(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
        consultation_text = """
üí´ **–õ–ò–ß–ù–ê–Ø –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Ø**

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø—Ä–æ–π—Ç–∏ –ø—É—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Ä–∞—Å–∫—Ä—ã—Ç—å –≤–∞—à –∏—Å—Ç–∏–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª.

**–ß—Ç–æ —è –ø—Ä–µ–¥–ª–∞–≥–∞—é:**

‚ú® **–ü–æ–≤—ã—à–µ–Ω–∏–µ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏**
‚Ä¢ –ò–∑–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–∏ –∏ —Å–æ–º–Ω–µ–Ω–∏–π
‚Ä¢ –û–±—Ä–µ—Ç–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ
‚Ä¢ –ü—Ä–∏–Ω—è—Ç–∏–µ –∏ –ª—é–±–æ–≤—å –∫ —Å–µ–±–µ

üéØ **–ü–æ–∏—Å–∫ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è**
‚Ä¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –¥–∞—Ä–∞
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ–π –º–∏—Å—Å–∏–∏
‚Ä¢ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞—Ä—å–µ—Ä—ã –ø–æ –ø—Ä–∏–∑–≤–∞–Ω–∏—é

üòå **–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –Ω–µ–≥–∞—Ç–∏–≤–∞**
‚Ä¢ –ü—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞—Ö–æ–≤ –∏ —Ç—Ä–µ–≤–æ–≥
‚Ä¢ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –≥–Ω–µ–≤–∞ –≤ —Å–∏–ª—É
‚Ä¢ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –æ–±–∏–¥ –ø—Ä–æ—à–ª–æ–≥–æ

üíù **–ì–∞—Ä–º–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π**
‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å –±–ª–∏–∑–∫–∏–º–∏
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—ã—Ö –≥—Ä–∞–Ω–∏—Ü
‚Ä¢ –ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

**–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã:**
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–µ—Å—Å–∏–∏ 1-2 —á–∞—Å–∞
‚Ä¢ –û–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω (–Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä)
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–∑–≤–∏—Ç–∏—è
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏

**–°—Ç–æ–∏–º–æ—Å—Ç—å:** –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ

üìû **–ó–∞–ø–∏—Å–∞—Ç—å—Å—è:**
–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ: [–í–∞—à Telegram/Email/–¢–µ–ª–µ—Ñ–æ–Ω]

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é" –∑–¥–µ—Å—å!

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üíô –í–∞—à–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞!
"""
        
        await update.message.reply_text(consultation_text, parse_mode=ParseMode.MARKDOWN)
    
    async def get_stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        user = update.effective_user
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
        if user.id != 123456789:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
            system_health = self.ai_client.get_system_health()
            
            stats_text = f"""
üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´**

**–¢–æ–∫–µ–Ω—ã:**
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {system_health['token_monitor']['total_requests']}
‚Ä¢ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {system_health['token_monitor']['total_tokens']}
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å: {system_health['token_monitor']['avg_tokens_per_request']:.1f}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±—Ä–µ–∑–∞–Ω–Ω—ã—Ö: {system_health['token_monitor']['truncation_rate']:.1%}

**–ö—ç—à:**
‚Ä¢ –ó–∞–ø–∏—Å–µ–π –≤ –∫—ç—à–µ: {system_health['response_cache']['total_entries']}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–π: {system_health['response_cache']['hit_rate']:.1%}
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: {system_health['response_cache']['memory_usage_estimate']} –±–∞–π—Ç

**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {system_health['token_monitor']['active_users']}

**–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:**
{chr(10).join(system_health['token_monitor']['optimization_alerts']) if system_health['token_monitor']['optimization_alerts'] else '–ù–µ—Ç'}
"""
            
            await update.message.reply_text(stats_text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    async def optimize_user(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user = update.effective_user
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            optimization_status = self.ai_client.get_user_optimization_status(user.id)
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
            optimization_result = self.ai_client.optimize_user_experience(user.id)
            
            result_text = f"""
üîß **–û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê**

**–ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**
{chr(10).join([opt['description'] for opt in optimization_result.get('applied_optimizations', [])]) if optimization_result.get('applied_optimizations') else '–ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π'}

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
{chr(10).join([rec.description for rec in optimization_status['optimization_suggestions']]) if optimization_status['optimization_suggestions'] else '–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π'}

**–°—Ç–∞—Ç—É—Å –∫—ç—à–∞:**
‚Ä¢ –ó–∞–ø–∏—Å–µ–π: {optimization_status['cache_stats']['total_entries']}
‚Ä¢ –ü–æ–ø–∞–¥–∞–Ω–∏–π: {optimization_status['cache_stats']['hit_rate']:.1%}
"""
            
            await update.message.reply_text(result_text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {e}")