"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
"""

import logging
from typing import Dict, Any, Optional
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from telegram.constants import ParseMode

logger = logging.getLogger(__name__)

class MessageHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    def __init__(self, ai_client, database):
        self.ai_client = ai_client
        self.database = database
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é"""
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        
        user = update.effective_user
        
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.ai_client.clear_user_data(user.id)
        
        welcome_text = f"""
üí´ **–ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–ê–Ø –ü–û–ú–û–©–¨ –ò –°–ê–ú–û–ü–û–ó–ù–ê–ù–ò–ï**

–®–∞–ª–æ–º, {user.first_name or '–¥—Ä—É–≥'}! 

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤ –¥—É—Ö–æ–≤–Ω–æ–º —Ä–æ—Å—Ç–µ –∏ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–∏.

**–ú–æ–π –ø–æ–¥—Ö–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞:**
‚Ä¢ –ü—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑–µ –ø–æ –∞–≤—Ç–æ—Ä—Å–∫–æ–π –º–µ—Ç–æ–¥–∏–∫–µ
‚Ä¢ –†–∞–±–æ—Ç–µ —Å –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–º –∏ –∞—Ä—Ö–µ—Ç–∏–ø–∞–º–∏
‚Ä¢ –ü—Ä–∏–Ω—Ü–∏–ø–∞—Ö —Å–∞–º–æ—É–≤–∞–∂–µ–Ω–∏—è –∏ –¥—É—Ö–æ–≤–Ω–æ—Å—Ç–∏

**–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã:**
"""
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üìä –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏", callback_data='test_samoocenka')],
            [InlineKeyboardButton("üíº –õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è üîí", callback_data='personal')],
            [InlineKeyboardButton("‚ùì –°–ø—Ä–∞–≤–∫–∞", callback_data='help')]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            welcome_text, 
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
        return 'WAITING_MESSAGE'
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = (
            "‚ùì *–°–ü–†–ê–í–ö–ê*\n\n"
            "*–ë–µ—Å–ø–ª–∞—Ç–Ω–æ:*\n"
            "‚Ä¢ –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏ (10 –≤–æ–ø—Ä–æ—Å–æ–≤)\n"
            "‚Ä¢ 10 follow\\-up –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞\n\n"
            "*–ü–ª–∞—Ç–Ω–æ \\(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\\):*\n"
            "‚Ä¢ –õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ—Ç 500‚ÇΩ\n\n"
            "*–ö–æ–º–∞–Ω–¥—ã:*\n"
            "/start \\- –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/test \\- —Ç–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏\n"
            "/cancel \\- –æ—Ç–º–µ–Ω–∏—Ç—å\n"
            "/help \\- —Å–ø—Ä–∞–≤–∫–∞\n\n"
            "*–ú–æ–π –ø–æ–¥—Ö–æ–¥:*\n"
            "‚Ä¢ –ü—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑ –ø–æ –∞–≤—Ç–æ—Ä—Å–∫–æ–π –º–µ—Ç–æ–¥–∏–∫–µ\n"
            "‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–º\n"
            "‚Ä¢ –î—É—Ö–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å!"
        )
        await update.message.reply_text(help_text, parse_mode=ParseMode.MARKDOWN)
    
    async def cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel - —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ"""
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        
        user = update.effective_user
        
        # –û—á–∏—â–∞–µ–º –í–°–ï –¥–∞–Ω–Ω—ã–µ
        self.ai_client.clear_user_data(user.id)
        context.user_data.clear()
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω
        if hasattr(self, 'analysis_handler'):
            self.analysis_handler.button_test_data.pop(user.id, None)
        
        # –û—á–∏—â–∞–µ–º —Ç—Ä–µ–∫–µ—Ä –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        if hasattr(self, 'conversation_handler'):
            self.conversation_handler.free_consultation_tracker.pop(user.id, None)
        
        keyboard = [
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')],
            [InlineKeyboardButton("üìä –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏", callback_data='test_samoocenka')],
            [InlineKeyboardButton("üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data='consultation')]
        ]
        
        await update.message.reply_text(
            "‚ùå **–û–¢–ú–ï–ù–ï–ù–û**\n\n"
            "–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã.\n\n"
            "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?",
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode=ParseMode.MARKDOWN
        )
        return ConversationHandler.END
    
    async def reset_bot(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset"""
        user = update.effective_user
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.ai_client.clear_user_data(user.id)
        
        await update.message.reply_text(
            "üîÑ –ë–æ—Ç —Å–±—Ä–æ—à–µ–Ω!\n\n"
            "–í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start"
        )
    
    async def clear_memory(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        user = update.effective_user
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
        if user.id != 123456789:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            return
        
        # –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
        self.ai_client.response_cache.clear()
        
        # –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        try:
            await self.database.clear_all_data()
            
            await update.message.reply_text(
                "‚úÖ –ü–∞–º—è—Ç—å –±–æ—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞:\n"
                "‚Ä¢ –û—á–∏—â–µ–Ω–∞ RAM –ø–∞–º—è—Ç—å\n"
                "‚Ä¢ –û—á–∏—â–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö\n"
                "‚Ä¢ –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ —É–¥–∞–ª–µ–Ω—ã\n\n"
                "üí° –î–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ Telegram –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start"
            )
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
    
    # PREMIUM FEATURE: –°–≤–æ–±–æ–¥–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ handlers/premium_consultation.py
    # async def start_consultation(...) - —Å–º. premium_consultation.py
    
    async def consultation_info(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
        consultation_text = """
üí´ **–õ–ò–ß–ù–ê–Ø –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Ø**

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø—Ä–æ–π—Ç–∏ –ø—É—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Ä–∞—Å–∫—Ä—ã—Ç—å –≤–∞—à –∏—Å—Ç–∏–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª.

**–ß—Ç–æ —è –ø—Ä–µ–¥–ª–∞–≥–∞—é:**

‚ú® **–ü–æ–≤—ã—à–µ–Ω–∏–µ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏**
‚Ä¢ –ò–∑–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–∏ –∏ —Å–æ–º–Ω–µ–Ω–∏–π
‚Ä¢ –û–±—Ä–µ—Ç–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ
‚Ä¢ –ü—Ä–∏–Ω—è—Ç–∏–µ –∏ –ª—é–±–æ–≤—å –∫ —Å–µ–±–µ

üéØ **–ü–æ–∏—Å–∫ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è**
‚Ä¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –¥–∞—Ä–∞
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ–π –º–∏—Å—Å–∏–∏
‚Ä¢ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞—Ä—å–µ—Ä—ã –ø–æ –ø—Ä–∏–∑–≤–∞–Ω–∏—é

üòå **–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –Ω–µ–≥–∞—Ç–∏–≤–∞**
‚Ä¢ –ü—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞—Ö–æ–≤ –∏ —Ç—Ä–µ–≤–æ–≥
‚Ä¢ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –≥–Ω–µ–≤–∞ –≤ —Å–∏–ª—É
‚Ä¢ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –æ–±–∏–¥ –ø—Ä–æ—à–ª–æ–≥–æ

üíù **–ì–∞—Ä–º–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π**
‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å –±–ª–∏–∑–∫–∏–º–∏
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—ã—Ö –≥—Ä–∞–Ω–∏—Ü
‚Ä¢ –ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

**–§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã:**
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–µ—Å—Å–∏–∏ 1-2 —á–∞—Å–∞
‚Ä¢ –û–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω (–Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä)
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–∑–≤–∏—Ç–∏—è
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏

**–°—Ç–æ–∏–º–æ—Å—Ç—å:** –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ

üìû **–ó–∞–ø–∏—Å–∞—Ç—å—Å—è:**
–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ: [–í–∞—à Telegram/Email/–¢–µ–ª–µ—Ñ–æ–Ω]

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é" –∑–¥–µ—Å—å!

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üíô –í–∞—à–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞!
"""
        
        await update.message.reply_text(consultation_text, parse_mode=ParseMode.MARKDOWN)
    
    async def get_stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        user = update.effective_user
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
        if user.id != 123456789:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
            system_health = self.ai_client.get_system_health()
            
            stats_text = f"""
üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´**

**–¢–æ–∫–µ–Ω—ã:**
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {system_health['token_monitor']['total_requests']}
‚Ä¢ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {system_health['token_monitor']['total_tokens']}
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å: {system_health['token_monitor']['avg_tokens_per_request']:.1f}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±—Ä–µ–∑–∞–Ω–Ω—ã—Ö: {system_health['token_monitor']['truncation_rate']:.1%}

**–ö—ç—à:**
‚Ä¢ –ó–∞–ø–∏—Å–µ–π –≤ –∫—ç—à–µ: {system_health['response_cache']['total_entries']}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–π: {system_health['response_cache']['hit_rate']:.1%}
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: {system_health['response_cache']['memory_usage_estimate']} –±–∞–π—Ç

**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {system_health['token_monitor']['active_users']}

**–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:**
{chr(10).join(system_health['token_monitor']['optimization_alerts']) if system_health['token_monitor']['optimization_alerts'] else '–ù–µ—Ç'}
"""
            
            await update.message.reply_text(stats_text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    async def optimize_user(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user = update.effective_user
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            optimization_status = self.ai_client.get_user_optimization_status(user.id)
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
            optimization_result = self.ai_client.optimize_user_experience(user.id)
            
            result_text = f"""
üîß **–û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê**

**–ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**
{chr(10).join([opt['description'] for opt in optimization_result.get('applied_optimizations', [])]) if optimization_result.get('applied_optimizations') else '–ù–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π'}

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
{chr(10).join([rec.description for rec in optimization_status['optimization_suggestions']]) if optimization_status['optimization_suggestions'] else '–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π'}

**–°—Ç–∞—Ç—É—Å –∫—ç—à–∞:**
‚Ä¢ –ó–∞–ø–∏—Å–µ–π: {optimization_status['cache_stats']['total_entries']}
‚Ä¢ –ü–æ–ø–∞–¥–∞–Ω–∏–π: {optimization_status['cache_stats']['hit_rate']:.1%}
"""
            
            await update.message.reply_text(result_text, parse_mode=ParseMode.MARKDOWN)
            
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {e}")
    
    async def handle_button_click(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ InlineKeyboard"""
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        from handlers.analysis_handler import AnalysisHandler
        
        query = update.callback_query
        await query.answer()
        
        data = query.data
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –∫–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∞, –æ—Ç–º–µ–Ω–∞ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç?
        if data.startswith('btn_test_') or data == 'cancel_test' or data.startswith('back_to_q'):
            if hasattr(self, 'analysis_handler'):
                await self.analysis_handler.handle_button_test_answer(update, context)
            return
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        if data == 'end_consultation':
            context.user_data.clear()
            await query.edit_message_text(
                "‚úÖ **–ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê**\n\n"
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!\n\n"
                "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?\n"
                "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                "/test - –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        # Follow-up –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
        if data == 'followup_start':
            await query.edit_message_text(
                f"üí¨ **–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –í–û–ü–†–û–°–´**\n\n"
                f"–£ –≤–∞—Å –µ—Å—Ç—å **{context.user_data.get('free_questions', 10)} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤** –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —Ç–µ—Å—Ç–∞.\n\n"
                f"–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –æ—Ç–≤–µ—á—É! üìù",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        if data == 'test_restart':
            await query.edit_message_text("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç...\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /test")
            return
        
        if data == 'main_menu':
            # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            context.user_data.clear()
            await query.edit_message_text(
                "üè† –í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /start",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        if data == 'test_samoocenka':
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é
            await query.edit_message_text(
                "üìä **–¢–ï–°–¢ –°–ê–ú–û–û–¶–ï–ù–ö–ò**\n\n"
                "–û—Ç–ª–∏—á–Ω–æ! –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: /test",
                parse_mode=ParseMode.MARKDOWN
            )
            
        elif data == 'premium':
            # –ü—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
            premium_text = """
‚≠ê **–ü–†–ï–ú–ò–£–ú –î–û–°–¢–£–ü**
*(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)*

**–ß—Ç–æ –±—É–¥–µ—Ç –≤–∫–ª—é—á–µ–Ω–æ:**
‚ú® –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏ (30 –≤–æ–ø—Ä–æ—Å–æ–≤)
‚ú® –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚ú® –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è
‚ú® –î–Ω–µ–≤–Ω–∏–∫ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
‚ú® –í—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏–∑ –∫–Ω–∏–≥–∏
‚ú® –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ PDF

**–¶–µ–Ω–∞:** 500‚ÇΩ/–º–µ—Å—è—Ü

üîî *–£–≤–µ–¥–æ–º–∏–º –≤–∞—Å –æ –∑–∞–ø—É—Å–∫–µ!*

/start - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
"""
            await query.edit_message_text(premium_text, parse_mode=ParseMode.MARKDOWN)
            
        elif data == 'personal':
            # –õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
            personal_text = """
üíº **–õ–ò–ß–ù–ê–Ø –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Ø**
üîí *–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ*

**–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:**

üí¨ **–°–≤–æ–±–æ–¥–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º**
‚Ä¢ –ù–∞ –æ—Å–Ω–æ–≤–µ –∫–Ω–∏–≥–∏ "–í–æ—Å—Ö–æ–∂–¥–µ–Ω–∏–µ"
‚Ä¢ GPT-4 –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
‚Ä¢ GPT-3.5 –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
‚Ä¢ –î–æ 15 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ—Å—Å–∏–∏

‚ú® **–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:**
‚Ä¢ –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
‚Ä¢ –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è

üí∞ **–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:**
‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã: 500‚ÇΩ (–¥–æ 7 –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ –°–ª–æ–∂–Ω—ã–µ —Å–ª—É—á–∞–∏: 2000‚ÇΩ (–¥–æ 15 –≤–æ–ø—Ä–æ—Å–æ–≤)
‚Ä¢ –õ–∏—á–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞: –æ—Ç 5000‚ÇΩ

üìÖ **–ö–æ–≥–¥–∞ –∑–∞–ø—É—Å—Ç–∏–º:**
–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ —á–µ—Ä–µ–∑ 2-3 –Ω–µ–¥–µ–ª–∏

üîî *–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ –∑–∞–ø—É—Å–∫–µ –ø–µ—Ä–≤—ã–º–∏?*
–ù–∞–ø–∏—à–∏—Ç–µ: "–ó–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"

/start - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
"""
            await query.edit_message_text(personal_text, parse_mode=ParseMode.MARKDOWN)
            
        elif data == 'help':
            # –°–ø—Ä–∞–≤–∫–∞
            help_text = """
‚ùì **–°–ü–†–ê–í–ö–ê**

**üéØ –° –ß–ï–ì–û –ù–ê–ß–ê–¢–¨:**

1Ô∏è‚É£ –ü—Ä–æ–π–¥–∏—Ç–µ /test
   ‚Üí –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (3 –º–∏–Ω—É—Ç—ã)

2Ô∏è‚É£ –ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å
   ‚Üí –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

**üí¨ –ö–û–ú–ê–ù–î–´:**
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/test - –¢–µ—Å—Ç —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å

**üß† –ú–û–ô –ü–û–î–•–û–î:**
‚Ä¢ –ü—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑ –ø–æ –∞–≤—Ç–æ—Ä—Å–∫–æ–π –º–µ—Ç–æ–¥–∏–∫–µ
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–º
‚Ä¢ –î—É—Ö–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è

/start - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
"""
            await query.edit_message_text(help_text, parse_mode=ParseMode.MARKDOWN)